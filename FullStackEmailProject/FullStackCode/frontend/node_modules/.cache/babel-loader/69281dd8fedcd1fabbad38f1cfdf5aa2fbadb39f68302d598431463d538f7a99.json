{"ast":null,"code":"var _jsxFileName = \"/Users/armanjordan/Desktop/FullStack/Assignment8/Assignment8/frontend/src/components/Logout.jsx\",\n  _s = $RefreshSig$();\nimport WindowContext from './WindowContext.jsx';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport IconButton from '@mui/material/IconButton';\nimport { useState } from 'react';\n// import {useNavigate} from 'react-router-dom';\n\nimport { useContext } from 'react';\n\n/**\n * Simple component with no state.\n *\n * @return {object} JSX\n * \n * If login doesnt work, double click it\n * Sometimes my computer was weird about that\n * I don't know if it'll apply to testers as well\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Logout() {\n  _s();\n  // const history = useNavigate();\n\n  // on submission of email and password\n  const handleLogout = event => {\n    event.preventDefault();\n    // call the login POST function\n    // update state\n    setIsSending(true);\n    // send the actual request\n    localStorage.removeItem('user');\n    myContext.setPrintedEmails([]);\n    myContext.setError('Logged Out');\n    // once the request is sent, update state again\n    setIsSending(false);\n\n    // puts us to the homepage of the application\n    // history('/login');\n  };\n\n  const myContext = useContext(WindowContext);\n  const [isSending, setIsSending] = useState(false);\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    \"aria-label\": \"logout\",\n    size: \"large\",\n    edge: \"start\",\n    color: \"inherit\",\n    align: \"right\",\n    sx: {\n      mr: 2\n    },\n    disabled: isSending,\n    onClick: handleLogout,\n    children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Logout, \"d3aR2TEikShQS0ENXXtP8zRarBU=\");\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["WindowContext","SettingsIcon","IconButton","useState","useContext","Logout","handleLogout","event","preventDefault","setIsSending","localStorage","removeItem","myContext","setPrintedEmails","setError","isSending","mr"],"sources":["/Users/armanjordan/Desktop/FullStack/Assignment8/Assignment8/frontend/src/components/Logout.jsx"],"sourcesContent":["import WindowContext from './WindowContext.jsx';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport IconButton from '@mui/material/IconButton';\nimport {useState} from 'react';\n// import {useNavigate} from 'react-router-dom';\n\nimport {useContext} from 'react';\n\n/**\n * Simple component with no state.\n *\n * @return {object} JSX\n * \n * If login doesnt work, double click it\n * Sometimes my computer was weird about that\n * I don't know if it'll apply to testers as well\n */\nfunction Logout() {\n  // const history = useNavigate();\n\n  // on submission of email and password\n  const handleLogout = (event) => {\n    event.preventDefault();\n    // call the login POST function\n    // update state\n    setIsSending(true);\n    // send the actual request\n    localStorage.removeItem('user');\n    myContext.setPrintedEmails([]);\n    myContext.setError('Logged Out');\n    // once the request is sent, update state again\n    setIsSending(false);\n\n    // puts us to the homepage of the application\n    // history('/login');\n  };\n\n  const myContext = useContext(WindowContext);\n  const [isSending, setIsSending] = useState(false);\n\n  return (\n    <IconButton\n      aria-label='logout'\n      size=\"large\"\n      edge=\"start\"\n      color=\"inherit\"\n      align=\"right\"\n      sx={{mr: 2}}\n      disabled={isSending}\n      onClick={handleLogout}>\n      <SettingsIcon />\n    </IconButton>\n  );\n}\n\nexport default Logout;\n"],"mappings":";;AAAA,OAAOA,aAAa,MAAM,qBAAqB;AAC/C,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAAQC,QAAQ,QAAO,OAAO;AAC9B;;AAEA,SAAQC,UAAU,QAAO,OAAO;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA,SAASC,MAAM,GAAG;EAAA;EAChB;;EAEA;EACA,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,EAAE;IACtB;IACA;IACAC,YAAY,CAAC,IAAI,CAAC;IAClB;IACAC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;IAC/BC,SAAS,CAACC,gBAAgB,CAAC,EAAE,CAAC;IAC9BD,SAAS,CAACE,QAAQ,CAAC,YAAY,CAAC;IAChC;IACAL,YAAY,CAAC,KAAK,CAAC;;IAEnB;IACA;EACF,CAAC;;EAED,MAAMG,SAAS,GAAGR,UAAU,CAACJ,aAAa,CAAC;EAC3C,MAAM,CAACe,SAAS,EAAEN,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEjD,oBACE,QAAC,UAAU;IACT,cAAW,QAAQ;IACnB,IAAI,EAAC,OAAO;IACZ,IAAI,EAAC,OAAO;IACZ,KAAK,EAAC,SAAS;IACf,KAAK,EAAC,OAAO;IACb,EAAE,EAAE;MAACa,EAAE,EAAE;IAAC,CAAE;IACZ,QAAQ,EAAED,SAAU;IACpB,OAAO,EAAET,YAAa;IAAA,uBACtB,QAAC,YAAY;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACL;AAEjB;AAAC,GApCQD,MAAM;AAAA,KAANA,MAAM;AAsCf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}